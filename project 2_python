# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2,
# the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.


# Thoughts
# I need to set a limit as 4 million
# create fib sequence where f(n_ = f(n-2++f(n-1)
# make a list of number contains all fibonacci sequence
# for loop if mod2 is zero, then sum the number


# make a list lst()
limit = 400000
lst = []
sums = 0
m = int(input("number of fibonacci numbers "))
def fibonacci(n):
    a = 0
    b = 1
    if n == 1:
        print(a)
    else:
        print(a)
        print(b)
        for i in range(2, n):                                           # nested
            c = a+b
            a = b
            b = c
            print(c)
            lst.append(c)
fibonacci(m)
if max(lst) < limit:
    print(lst)
    for i in lst:
        if i % 2 == 0:
            sums = sums + i
    print("the total number is:", sums)
